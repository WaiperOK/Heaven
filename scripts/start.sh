#!/bin/bash

# Heaven AI Arena - Startup Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_requirements() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Rust (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
    if ! command -v cargo &> /dev/null; then
        warn "Rust –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã."
    fi
    
    log "–í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã ‚úì"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    mkdir -p data/logs
    mkdir -p data/uploads
    mkdir -p data/datasets
    mkdir -p models/llm
    mkdir -p models/cache
    mkdir -p models/hf
    
    log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã ‚úì"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_environment() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f .env ]; then
        cat > .env << EOF
# Heaven AI Arena Configuration
DATABASE_URL=postgresql://heaven:heaven_pass@postgres:5432/heaven
REDIS_URL=redis://redis:6379
LLM_SERVICE_URL=http://llm_service:8000
ARENA_CORE_URL=http://arena_core:8080
DEFAULT_MODEL=llama2:7b
CUDA_VISIBLE_DEVICES=0
TRANSFORMERS_CACHE=/app/models/cache
HF_HOME=/app/models/hf
API_KEY=heaven_api_key
EOF
        log "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    fi
    
    log "–û–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ ‚úì"
}

# –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
build_images() {
    log "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    
    # –°–±–æ—Ä–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    docker-compose build --parallel
    
    log "–û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã ‚úì"
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
start_services() {
    log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    docker-compose up -d
    
    log "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã ‚úì"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
check_health() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PostgreSQL
    if docker-compose exec postgres pg_isready -U heaven -d heaven > /dev/null 2>&1; then
        log "PostgreSQL: Healthy ‚úì"
    else
        warn "PostgreSQL: Not ready"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Redis
    if docker-compose exec redis redis-cli ping | grep -q "PONG"; then
        log "Redis: Healthy ‚úì"
    else
        warn "Redis: Not ready"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º LLM Service
    if curl -s -f http://localhost:8000/health > /dev/null 2>&1; then
        log "LLM Service: Healthy ‚úì"
    else
        warn "LLM Service: Not ready (–º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º No Code UI
    if curl -s -f http://localhost:8501 > /dev/null 2>&1; then
        log "No Code UI: Healthy ‚úì"
    else
        warn "No Code UI: Not ready"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Arena Core
    if curl -s -f http://localhost:8080 > /dev/null 2>&1; then
        log "Arena Core: Healthy ‚úì"
    else
        warn "Arena Core: Not ready"
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}"
    echo "================================="
    echo "   Heaven AI Arena Startup      "
    echo "================================="
    echo -e "${NC}"
    
    check_requirements
    create_directories
    setup_environment
    build_images
    start_services
    check_health
    
    echo -e "${GREEN}"
    echo "================================="
    echo "   Heaven AI Arena –∑–∞–ø—É—â–µ–Ω–∞!    "
    echo "================================="
    echo -e "${NC}"
    
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    echo "üåå No Code UI:    http://localhost:8501"
    echo "ü§ñ LLM Service:   http://localhost:8000"
    echo "üéÆ Arena Core:    http://localhost:8080"
    echo "üóÑÔ∏è  PostgreSQL:   localhost:5432"
    echo "üóÉÔ∏è  Redis:        localhost:6379"
    echo ""
    echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: docker-compose logs -f"
    echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:       docker-compose down"
    echo "–î–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏:  docker-compose down -v"
    echo ""
    echo "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md"
    echo "–ü–æ–¥–¥–µ—Ä–∂–∫–∞: https://github.com/heaven-ai-arena/issues"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    "stop")
        log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose down
        log "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úì"
        ;;
    "restart")
        log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose restart
        log "–°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã ‚úì"
        ;;
    "logs")
        docker-compose logs -f
        ;;
    "clean")
        log "–û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
        docker-compose down -v
        docker system prune -f
        log "–°–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞ ‚úì"
        ;;
    "dev")
        log "–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        export COMPOSE_FILE=docker-compose.yml:docker-compose.dev.yml
        main
        ;;
    "help"|"-h"|"--help")
        echo "Heaven AI Arena - Startup Script"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [COMMAND]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo "  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo "  logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  clean   - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ"
        echo "  dev     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        echo "  help    - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        ;;
    *)
        main
        ;;
esac 